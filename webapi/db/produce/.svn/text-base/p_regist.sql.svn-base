-- Script was generated by Devart dbForge Studio for MySQL, Version 5.0.50.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 2015/11/20 16:00:31
-- Server version: 5.5.36-log
-- Client version: 4.1



DELIMITER $$

CREATE DEFINER = 'livedb'@'%'
PROCEDURE p_regist(IN  vi_param VARCHAR(1024),
                   OUT vo_data  VARCHAR(1024),
                   OUT vo_res   INT
                   )
lab:
BEGIN
  DECLARE vi_account VARCHAR(64) DEFAULT NULL;
  DECLARE vi_pwd     VARCHAR(64) DEFAULT NULL; -- 已经在js端加密了
  DECLARE vi_email   VARCHAR(64) DEFAULT NULL;
  DECLARE vi_tel     VARCHAR(20) DEFAULT NULL;
  DECLARE vi_type    TINYINT DEFAULT 0; --  1代表是邮箱  2代表是手机
  DECLARE vi_key_val VARCHAR(255);

  DECLARE v_param    VARCHAR(1024) DEFAULT '';
  DECLARE v_key      VARCHAR(255) DEFAULT NULL;
  DECLARE v_value    VARCHAR(255) DEFAULT NULL;
  DECLARE v_key_val  VARCHAR(255) DEFAULT NULL;
  DECLARE v_count    INT DEFAULT 0;
  DECLARE v_tmpcount INT DEFAULT 0;
  DECLARE v_i        INT DEFAULT 1;
  DECLARE v_id       INT DEFAULT 0;
  DECLARE v_num      INT DEFAULT 0;
  DECLARE v_state    INT DEFAULT 0;
  DECLARE vo_userid  INT DEFAULT 0;
  DECLARE v_params   VARCHAR(1024) DEFAULT '';

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    SET vo_res = 9999;
  END;

  SET vi_account = getValue(vi_param, 'account');
  SET vi_pwd = getValue(vi_param, 'pwd');
  SET vi_email = getValue(vi_param, 'email');
  SET vi_tel = getValue(vi_param, 'tel');
  SET vi_type = getValue(vi_param, 'type');
  SET vi_key_val = getValue(vi_param, 'key_val');

  IF (vi_account = "" OR vi_pwd = "") THEN
    SET vo_res = 1007; #参数错误
    LEAVE lab;
  END IF;

  #检测帐号是否存在
  SELECT count(*)
       , status
  INTO
    v_num, v_state
  FROM
    qst_user
  WHERE
    account = vi_account;

  IF (v_num > 0) THEN
    IF v_state = 0 AND vi_type = 1 THEN
      SET vo_res = 1036;
    ELSE
      SET vo_res = 1010; #帐号已存在
    END IF;
    LEAVE lab;
  END IF;

  -- 检测是否被有效的绑定了
  SELECT count(*)
  INTO
    v_num
  FROM
    qst_user_bind
  WHERE
    (contact = vi_email
    OR contact = vi_tel)
    AND type = vi_type
    AND state = 1;


  IF (v_num > 0) THEN
    CASE vi_type
    WHEN 1 THEN
      SET vo_res = 1032; -- 邮箱已存在
    WHEN 2 THEN
      SET vo_res = 1033; -- 手机已存在
    END CASE;
    LEAVE lab;
  END IF;


  -- 查询邮箱是否有未激活的状态
  SELECT count(*)
  INTO
    v_count
  FROM
    qst_user_bind qub
    , qst_user_verify quv
  WHERE
    qub.contact = vi_email
    AND qub.type = 1
    AND qub.state = 0
    AND quv.state = 0
    AND quv.`time` > now();
  IF v_count > 0 THEN
    SET vo_res = 1036;
    LEAVE lab;
  END IF;

  #插入公共用户数据,手机type=2直接有效，邮箱type=1需要激活
  INSERT INTO qst_user (account, passwd, /*email, tel, type, */ `status`, `time`)
  SELECT vi_account
       , vi_pwd
       /*,vi_email, vi_tel,  vi_type,*/
       , if(vi_type = 1, 0, 1)
       , now();

  SELECT @@IDENTITY
  INTO
    v_id;

  SET vo_userid = v_id + 100000000;
  UPDATE qst_user
  SET
    userid = vo_userid
  WHERE
    id = v_id;

  -- 查询属性
  SET
  v_count = func_split_TotalLength(vi_key_val, ','); #键值对个数
  WHILE (v_i <= v_count)
  DO
    SET v_key_val = func_split(vi_key_val, ',', v_i); #a=b
    SET v_key = func_split(v_key_val, '=', 1); #a
    SET v_value = func_split(v_key_val, '=', 2); #b
    SET v_i = v_i + 1;

    #向user_info表中插入数据
    INSERT INTO qst_user_info (userid, `KEY`, KEYVALUE) VALUES (vo_userid, v_key, v_value);
  END WHILE;

  -- 如果手机注册，加入绑定表，默认激活（这里肯定已经通过短信验证了）
  IF vi_tel != '' AND vi_type = 2 THEN
    INSERT INTO qst_user_bind (userid, contact, btime, type, state) VALUES (vo_userid, vi_tel, now(), vi_type, 1);
  END IF;
  -- 如果邮箱注册，加入绑定表，默认未激活
  IF vi_email != '' AND vi_type = 1 THEN
    INSERT INTO qst_user_bind (userid, contact, btime, type, state) VALUES (vo_userid, vi_email, now(), vi_type, 0);
  END IF;


  SET v_params = addFmtString(v_params, '=', 'userid', vo_userid);
  SET vo_data = v_params;
  SET vo_res = 0;
END
$$

DELIMITER ;